import numpy as np
import plotly.graph_objects as go

# 将字模 dex 转换为 n*n 的 Numpy 2D 矩阵
def dex2Mat(dex, n) -> np.ndarray:
    mat = np.zeros((n,n), dtype=bool)
    for i in range(n):
        for j in range(n):
            jt = int(j/8)
            temp = dex[n*jt+i] << (j-8*jt)
            dot = (bool)(temp & 0x80)
            mat[i,j] = dot
    return mat

def magicMat(mat1, mat2):
    mat2 = mat2.transpose((2,1,0))
    return np.logical_and(mat1, mat2)

# 通过 Plotly 打印 Numpy 3D 矩阵
def plot3dMat(mat: np.ndarray):
    x = np.ones(1)
    y = x
    z = y
    for zt in range(mat.shape[0]):
        for yt in range(mat.shape[1]):
            for xt in range(mat.shape[2]):
                if mat[zt, yt, xt] == True:
                    x = np.append(x, xt)
                    y = np.append(y, yt)
                    z = np.append(z, -zt)
    fig = go.Figure(data=[go.Scatter3d(x=x,y=y,z=z,mode='markers')])
    fig.update_layout(margin=dict(l=0, r=0, b=0, t=0))
    fig.show()

# 张
testDexZhang16 = [0x01, 0xf9, 0x09, 0x09, 0x09, 0x79, 0x41, 0x47, 0x41, 0x79, 0x09, 0x09, 0x09, 0x09, 0x51, 0x21,
                0x00, 0x08, 0x08, 0x10, 0x20, 0x40, 0x00, 0xfe, 0x40, 0x20, 0x20, 0x10, 0x08, 0x44, 0x82, 0x00]
# 婷
testDexTing16 = [0x10, 0x10, 0x13, 0x10, 0xfd, 0x25, 0x25, 0x24, 0x27, 0x4a, 0x29, 0x10, 0x28, 0x44, 0x84, 0x00,
               0x40, 0x20, 0xfe, 0x00, 0xfc, 0x04, 0xfc, 0x00, 0xfe, 0x02, 0xfc, 0x20, 0x20, 0x20, 0xa0, 0x40]

# 张
testDexZhang32 = [0x00, 0x00, 0x00, 0x00, 0x7f, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x1f, 0x1c, 0x1c, 0x1c, 0x1c, 0x3c, 0x3f, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x3f, 0x1f, 0x0f, 0x07, 0x00,
                  0x00, 0x00, 0x31, 0x79, 0xf9, 0x79, 0x71, 0x71, 0x71, 0x71, 0x71, 0xf1, 0x71, 0x71, 0x01, 0x1f, 0xff, 0xf9, 0xf1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xc1, 0xc1, 0x00, 0x00,
                  0x00, 0x00, 0xe0, 0xe0, 0xc0, 0xc0, 0xc0, 0xc1, 0xc3, 0xc7, 0xcf, 0xde, 0xf8, 0xf0, 0xc0, 0xff, 0xd8, 0xdc, 0xcc, 0xce, 0xce, 0xc7, 0xc7, 0xc3, 0xc3, 0xcf, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x60, 0xf0, 0xf8, 0xf0, 0xe0, 0x80, 0x00, 0x00, 0x00, 0x18, 0x3c, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xf8, 0xfe, 0x7e, 0x38, 0x18, 0x00, 0x00]

# 婷
testDexTing32 = [0x00, 0x00, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x0f, 0xff, 0x7e, 0x0e, 0x0e, 0x1e, 0x1c, 0x1c, 0x1c, 0x3c, 0x38, 0x39, 0x3f, 0x1f, 0x07, 0x03, 0x07, 0x07, 0x0f, 0x1e, 0x3c, 0x78, 0x70, 0x00,
                 0x00, 0x00, 0x80, 0xc0, 0x80, 0x80, 0x0f, 0x07, 0x39, 0xfd, 0x79, 0x79, 0x71, 0x71, 0x71, 0xf6, 0xf7, 0xee, 0xee, 0xfe, 0xef, 0xc1, 0xe0, 0xf0, 0xf8, 0x78, 0x38, 0x11, 0x01, 0x00, 0x00, 0x00,
                 0x00, 0x00, 0x3c, 0x1e, 0x1e, 0x0e, 0xff, 0x00, 0xc0, 0xff, 0xc0, 0xc0, 0xff, 0xc0, 0x80, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0xce, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0xfe, 0xfe, 0x3e, 0x18, 0x00,
                 0x00, 0x00, 0x00, 0x00, 0x18, 0x3c, 0xfe, 0x00, 0xe0, 0xf0, 0xe0, 0xe0, 0xe0, 0xe0, 0xc0, 0x1c, 0xfe, 0x1e, 0x78, 0xf8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]

# magicMat = dex2Mat(testDexTing16, 16).repeat(16, axis=1).reshape(16,16,16)
testt = dex2Mat(testDexTing32, 32).repeat(32, axis=1).reshape(32,32,32)
testz = dex2Mat(testDexZhang32, 32).repeat(32, axis=1).reshape(32,32,32)
tt = magicMat(testz, testt)
plot3dMat(tt)
